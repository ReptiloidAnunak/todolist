
version: "3.9"
services:
  frontend:
    image: sermalenk/skypro-front:lesson-37
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
  api:
    image: artemiystepanov/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    image: artemiystepanov/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate

  postgres:
      image: postgres:latest
      environment:
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_DB: ${DB_NAME}
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
        interval: 5s
        timeout: 5s
        retries: 10

      volumes:
        - ./pg_data:/var/lib/docker/volumes/data