name: Build and deploy action
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      #Логируем копирование кода
      - name: list dir
        run: ls -la
      # Копируем код из репозитория в runner
      - name: clone code
        uses: actions/checkout@v2
      #Логируем копирование кода
      - name: list dir
        run: ls -la
      # Собираем
      - name: docker build
        run: docker build -t artemiystepanov/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      #Заходим в аккаунт Docker
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #Отправляем в Docker hub
      - name: docker push
        run: docker push artemiystepanov/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_USER: ${{ secrets.POSTGRES_USER }}
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_NAME: ${{ secrets.POSTGRES_DB }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: copy files to server
        uses:  appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "todolist_ci/"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd todolist_ci
            sudo docker compose up -d
            ${{ secrets.SERVER_PASSWORD }}
            
      
#      - name: Cleanup
#        if: always()
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SERVER_HOST }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          password: ${{ secrets.SERVER_PASSWORD }}
#          script: |
#            docker system prune -a -f